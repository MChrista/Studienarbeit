/*****************************************/
/*                                       */
/*             DHBW KERNEL               */
/*                                       */
/* 'ldscript' --- A simple Linker Script */
/* for use with the GNU linker 'ld'      */
/*                                       */
/*****************************************/

SEARCH_DIR("../libkernel/obj");
OUTPUT_FORMAT("elf32-i386");
ENTRY(_start);

/*
 * Linear start address of the binary image
 */
LD_IMAGE_START = 0x10000;

/*
 * Offset of the data segment relative to
 * the start of the binary image
 */
LD_DATA_ADDR  = 0x10000;

/*
 * Linear start address of the data segment
 * Data structures such as the GDT, IDT and
 * paging tables need linear addresses instead
 * of segmented addresses
 */
LD_DATA_START = LD_IMAGE_START + LD_DATA_ADDR;

SECTIONS
{
    .signature 0x00000000 : AT(0x00000000)
    {
        start.o(.signature)
    }
    .note.gnu.build-id : { *(.note.gnu.build-id) }
    .text16 :
    {
        start.o(.text16)
        *(.text16)
        . = ALIGN(16);
    }
    .text :
    {
        code = .; _code = .; __code = .;
        start.o(.text)
        *(.text)
        PROVIDE(etext = .);
    }
    .data 0x00000000 : AT(LD_DATA_ADDR)
    {
        data = .; _data = .; __data = .;
        sdata = ADDR(.data);
        *(.data)
        *(.rodata)
        PROVIDE(edata = .);
        . = ALIGN(16);
    }
    .bss :
    {
        bss = .; _bss = .; __bss = .;
        *(.bss)
        PROVIDE(ebss = .);
        . = ALIGN(16);
    }
    end = .; _end = .; __end = .;
}

